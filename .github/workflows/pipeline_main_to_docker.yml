name: test main branch
#Chicat√© Glory DE1
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_run:
    workflows:
      - test dev branch
    types:
      - completed
  
  
    
  

jobs:
  backend_test_branch_main:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'  
      - run: npm install
      - run: npm test
  frontend_test_branch_main:
    runs-on: ubuntu-latest
    needs:
      - backend_test_branch_main
    if: needs.backend_test_branch_main.result == 'success'
    defaults:
      run:
        shell: bash
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'  
      - run: npm install
      - run: npm test
  
  e2e_tests_main:
    runs-on: ubuntu-latest
    needs:
      - frontend_test_branch_main
    if: needs.frontend_test_branch_main.result == 'success'
    defaults:
      run:
        shell: bash
        working-directory: ./e2e-tests
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' 
      - name: Install e2e dependencies
        run: npm install
      
      - name: Start Application with Docker Compose
        working-directory: ./
        run: |
          docker compose up -d
          echo "Waiting for application to start..."
          sleep 30
      - name: Check if application is running
        run: |
          curl -v http://localhost:3000 || exit 1
      - name: Run E2E tests
        working-directory: ./e2e-tests
        env:
          NODE_ENV: test
        run: |
          # Installer ChromeDriver et lancer les tests Selenium
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q https://chromedriver.storage.googleapis.com/$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          export PATH=$PATH:/usr/local/bin/
          npm run test # Lancer les tests E2E avec Selenium

  Build_push_docker_image:
    runs-on: ubuntu-latest
    needs:
      - e2e_tests_main
    if: needs.e2e_tests_main.result == 'success'
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' 
      - name: login to docker
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker images using docker-compose
        run: |
          docker compose build --push
      - name: list of imeages
        run: |
          docker images -a
      - name: Tag the docker image frontend
        run: |
          docker tag reverse-todo-list2-frontend glory971/reverse-todo-listapp:front
      - name: Push Docker images front
        run: |
          docker push glory971/reverse-todo-listapp:front
      - name: Tag the docker image backend
        run: |
          docker tag reverse-todo-list2-backend glory971/reverse-todo-listapp:back
      - name: Push Docker images backend
        run: |
          docker push glory971/reverse-todo-listapp:back
          
    
