name: Sync multiple branches

on:
  push:
    branches: [ "dev" ]
    
      
jobs:
  job1:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'  
      - run: npm install
      - run: npm test
  job2:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'  
      - run: npm install
      - run: npm test
  
  job16:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./e2e-tests
    steps:
      - name: Install e2e dependencies
        run: npm install
      - name: Set DOCKER_USERNAME environment variable
        run: echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV
      
      - name: Start Application with Docker Compose
        working-directory: ./
        run: |
          docker compose up -d
          echo "Waiting for application to start..."
          sleep 30
      - name: Check if application is running
        run: |
          curl -v http://localhost:3000 || exit 1
      - name: Run E2E tests
        working-directory: ../e2e-tests
        env:
          NODE_ENV: test
        run: |
          # Installer ChromeDriver et lancer les tests Selenium
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q https://chromedriver.storage.googleapis.com/$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          export PATH=$PATH:/usr/local/bin/
          npm run test # Lancer les tests E2E avec Selenium
  
  merge-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Merge development -> staging
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: dev
          target_branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
  job4:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: "glory971"
          password: "eJHX7lFn1rQIOtknvhuu"
      - name: Build Docker images using docker-compose
        run: |
          docker compose build --push
      - name: Push Docker images to Docker Hub
        run: |
          docker images -a
      - name: Push Docker images to Docker Hub 2
        run: |
          docker tag reverse-todo-list2-frontend glory971/frontendapp:front
      - name: Push Docker images to Docker Hub 3
        run: |
          docker push glory971/frontendapp:front
      - name: Push Docker images to Docker Hub 2
        run: |
          docker tag reverse-todo-list2-backend glory971/frontendapp:back
      - name: Push Docker images to Docker Hub 3
        run: |
          docker push glory971/frontendapp:back
        


      
        
      

    
